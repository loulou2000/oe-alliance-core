From f0a3787a1a2ff355879ac246e6bd23783566f281 Mon Sep 17 00:00:00 2001
From: Stephan Reichholf <reichi@opendreambox.org>
Date: Thu, 19 Apr 2012 16:45:36 +0200
Subject: [PATCH] Expose Webkits WebSecurityEnabled settings via
 QWebSettings (see
 https://bugs.webkit.org/show_bug.cgi?id=45436 )

---
 .../webkit/Source/WebKit/qt/Api/qwebsettings.cpp   |   12 +++++++++++-
 .../webkit/Source/WebKit/qt/Api/qwebsettings.h     |    3 ++-
 2 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/src/3rdparty/webkit/Source/WebKit/qt/Api/qwebsettings.cpp b/src/3rdparty/webkit/Source/WebKit/qt/Api/qwebsettings.cpp
index c1ef92e..c95a947 100644
--- a/src/3rdparty/webkit/Source/WebKit/qt/Api/qwebsettings.cpp
+++ b/src/3rdparty/webkit/Source/WebKit/qt/Api/qwebsettings.cpp
@@ -262,6 +262,10 @@ void QWebSettingsPrivate::apply()
                                       global->attributes.value(QWebSettings::XSSAuditingEnabled));
         settings->setXSSAuditorEnabled(value);
 
+        value = attributes.value(QWebSettings::WebSecurityEnabled,
+                                      global->attributes.value(QWebSettings::WebSecurityEnabled));
+        settings->setWebSecurityEnabled(value);
+
 #if ENABLE(TILED_BACKING_STORE)
         value = attributes.value(QWebSettings::TiledBackingStoreEnabled,
                                       global->attributes.value(QWebSettings::TiledBackingStoreEnabled));
@@ -468,7 +472,12 @@ QWebSettings* QWebSettings::globalSettings()
         This is disabled by default.
     \value SiteSpecificQuirksEnabled This setting enables WebKit's workaround for broken sites. It is
         enabled by default.
-*/
+    \value WebSecurityEnabled Specifies whether browser should enforce same-origin policy for scripts downloaded
+        from remote servers. This setting is set to true by default. Note that setting this flag to false is 
+        strongly discouraged as it makes the browser more prone to malicious code. This setting is intended
+        primarily for site-specific browsers (i.e. when the user can't navigate to unsecure web page) and for testing
+        web applications before deployment.
+ */
 
 /*!
     \internal
@@ -517,6 +526,7 @@ QWebSettings::QWebSettings()
     d->attributes.insert(QWebSettings::TiledBackingStoreEnabled, false);
     d->attributes.insert(QWebSettings::FrameFlatteningEnabled, false);
     d->attributes.insert(QWebSettings::SiteSpecificQuirksEnabled, true);
+    d->attributes.insert(QWebSettings::WebSecurityEnabled, true);
     d->offlineStorageDefaultQuota = 5 * 1024 * 1024;
     d->defaultTextEncoding = QLatin1String("iso-8859-1");
 }
diff --git a/src/3rdparty/webkit/Source/WebKit/qt/Api/qwebsettings.h b/src/3rdparty/webkit/Source/WebKit/qt/Api/qwebsettings.h
index 008035b..233fa4f 100644
--- a/src/3rdparty/webkit/Source/WebKit/qt/Api/qwebsettings.h
+++ b/src/3rdparty/webkit/Source/WebKit/qt/Api/qwebsettings.h
@@ -77,7 +77,8 @@ public:
         SiteSpecificQuirksEnabled,
         JavascriptCanCloseWindows,
         WebGLEnabled,
-        HyperlinkAuditingEnabled
+        HyperlinkAuditingEnabled,
+        WebSecurityEnabled
     };
     enum WebGraphic {
         MissingImageGraphic,
-- 
1.7.5.4

